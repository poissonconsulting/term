[{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to term","title":"Contributing to term","text":"outlines propose change term.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to term","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to term","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to term","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. Begin commit merge messages - indicate user facing changes included NEWS.md. use fledge automatically generate NEWS.md file.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to term","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to term","text":"Please note term project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Poisson Consulting Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with term","title":"Getting help with term","text":"Thanks using term! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/SUPPORT.html","id":"make-sure-its-new","dir":"","previous_headings":"","what":"Make sure its new","title":"Getting help with term","text":"opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with term","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Thorley. Author, maintainer. Kirill Müller. Author. Ayla Pearson. Contributor. Evan Amies-Galonski. Contributor. . Copyright holder, funder.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thorley J, Müller K (2025). term: Create, Manipulate Query Parameter Terms. R package version 0.3.5.9006, https://github.com/poissonconsulting/term, https://poissonconsulting.github.io/term/.","code":"@Manual{,   title = {term: Create, Manipulate and Query Parameter Terms},   author = {Joe Thorley and Kirill Müller},   year = {2025},   note = {R package version 0.3.5.9006,     https://github.com/poissonconsulting/term},   url = {https://poissonconsulting.github.io/term/}, }"},{"path":"https://poissonconsulting.github.io/term/dev/index.html","id":"term-","dir":"","previous_headings":"","what":"Create, Manipulate and Query Parameter Terms","title":"Create, Manipulate and Query Parameter Terms","text":"term R package create, manipulate, query repair vectors parameter terms. Parameter terms labels used reference values vectors, matrices arrays. represent names coefficient tables column names mcmc mcmc.list objects.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/index.html","id":"term-vectors","dir":"","previous_headings":"Demonstration","what":"Term Vectors","title":"Create, Manipulate and Query Parameter Terms","text":"","code":"library(term)  # term vectors are the labels used to reference values in # vectors, matrices and arrays term <- term(   \"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\",   \"beta[1,2]\", \"beta[2,2]\", \"sigma\" )  # they print like character vectors term #> <term[7]> #> [1] alpha[1]  alpha[2]  beta[1,1] beta[2,1] beta[1,2] beta[2,2] sigma  # but are S3 class objects that also inherit from vctrs_vctr class(term) #> [1] \"term\"       \"vctrs_vctr\" # consider a matrix of term values set.seed(101) estimate <- matrix(rnorm(4), nrow = 2) estimate #>            [,1]       [,2] #> [1,] -0.3260365 -0.6749438 #> [2,]  0.5524619  0.2143595  # the term labels can be created using as_term() term <- as_term(estimate, name = \"b0\") term #> <term[4]> #> [1] b0[1,1] b0[2,1] b0[1,2] b0[2,2]  # and combined with the term values to create a coef table library(tibble) coef <- tibble(term = term, estimate = as.vector(estimate)) coef #> # A tibble: 4 × 2 #>   term    estimate #>   <term>     <dbl> #> 1 b0[1,1]   -0.326 #> 2 b0[2,1]    0.552 #> 3 b0[1,2]   -0.675 #> 4 b0[2,2]    0.214"},{"path":"https://poissonconsulting.github.io/term/dev/index.html","id":"querying-term-vectors","dir":"","previous_headings":"Demonstration","what":"Querying Term Vectors","title":"Create, Manipulate and Query Parameter Terms","text":"","code":"# the term vectors are readily sorted coef[rev(order(coef$term)), ] #> # A tibble: 4 × 2 #>   term    estimate #>   <term>     <dbl> #> 1 b0[2,2]    0.214 #> 2 b0[1,2]   -0.675 #> 3 b0[2,1]    0.552 #> 4 b0[1,1]   -0.326  # and the parameter names or parameter dimensions extracted term <- term(   \"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\",   \"beta[1,2]\", \"beta[2,2]\", \"sigma\" )  pars(term) #> [1] \"alpha\" \"beta\"  \"sigma\" pdims(term) #> $alpha #> [1] 2 #>  #> $beta #> [1] 2 2 #>  #> $sigma #> [1] 1  # this can also be done for each term pars_terms(term) #> [1] \"alpha\" \"alpha\" \"beta\"  \"beta\"  \"beta\"  \"beta\"  \"sigma\" tindex(term) #> $`alpha[1]` #> [1] 1 #>  #> $`alpha[2]` #> [1] 2 #>  #> $`beta[1,1]` #> [1] 1 1 #>  #> $`beta[2,1]` #> [1] 2 1 #>  #> $`beta[1,2]` #> [1] 1 2 #>  #> $`beta[2,2]` #> [1] 2 2 #>  #> $sigma #> [1] 1"},{"path":"https://poissonconsulting.github.io/term/dev/index.html","id":"validating-term-vectors","dir":"","previous_headings":"Demonstration","what":"Validating Term Vectors","title":"Create, Manipulate and Query Parameter Terms","text":"","code":"# term vectors can be tested for whether they have (parseably) valid, # (dimensionally) consistent and complete terms.  # valid terms valid_term(term(\"a\", \"a[1]\", \"a [2]\", \" b [3  ] \", \"c[1,10]\")) #> [1] TRUE TRUE TRUE TRUE TRUE  # invalid terms valid_term(new_term(c(\"a a\", \"a[]\", \"a[2\", \" b[3 3]\", \"c[1,10]c\"))) #> [1] FALSE FALSE FALSE FALSE FALSE  # consistent terms consistent_term(term(\"a\", \"a[2]\", \"b[1,1]\", \"b[10,99]\")) #> [1] TRUE TRUE TRUE TRUE  # inconsistent terms consistent_term(term(\"a\", \"a[2,1]\", \"b[1,1]\", \"b[10,99,1]\")) #> [1] FALSE FALSE FALSE FALSE  # complete terms is_incomplete_terms(term(\"a\", \"a[2]\", \"b[1,1]\", \"b[2,1]\")) #> [1] FALSE  # incomplete terms is_incomplete_terms(term(\"a\", \"a[3]\", \"b[1,1]\", \"b[2,2]\")) #> [1] TRUE"},{"path":"https://poissonconsulting.github.io/term/dev/index.html","id":"checking-term-vectors","dir":"","previous_headings":"Demonstration","what":"Checking Term Vectors","title":"Create, Manipulate and Query Parameter Terms","text":"","code":"# term vectors can be checked using functions styled on those in the chk package x <- term(\"a[1]\", \"a[3]\") vld_term(x, validate = \"valid\") #> [1] TRUE chk_term(x, validate = \"complete\") #> Error: #> ! All elements of term vector `x` must be complete."},{"path":"https://poissonconsulting.github.io/term/dev/index.html","id":"repairing-term-vectors","dir":"","previous_headings":"Demonstration","what":"Repairing Term Vectors","title":"Create, Manipulate and Query Parameter Terms","text":"","code":"term <- new_term(c(\"b[4]\", \"b   [2]\", \"b\", \"b[1\", \"b[2, 2]\", \"b\", \"a [ 1 ] \", NA)) term #> <term[8]> #> [1] b[4]       `b   [2]`  b          b[1        `b[2, 2]`  b          `a [ 1 ] ` #> [8] <NA>  # valid terms can be repaired (invalid terms are converted to missing values) term <- repair_terms(term) term #> <term[8]> #> [1] b[4]   b[2]   b[1]   <NA>   b[2,2] b[1]   a      <NA>  # the `term()` constructor rejects invalid terms term(\"b[4]\", \"b   [2]\", \"b\", \"b[1\", \"b[2, 2]\", \"b\", \"a [ 1 ] \", NA) #> Error in `term_impl()`: #> ! All elements of term vector `string_args_term` must be valid.  # missing values can easily removed term <- term[!is.na(term)] term #> <term[6]> #> [1] b[4]   b[2]   b[1]   b[2,2] b[1]   a  # and only unique values retained term <- unique(term) term #> <term[5]> #> [1] b[4]   b[2]   b[1]   b[2,2] a  # a term vector can be sorted by parameter name and index term <- sort(term) term #> <term[5]> #> [1] a      b[1]   b[2]   b[4]   b[2,2]  # an inconsistent term removed term <- term[term != \"b[2,2]\"] term #> <term[4]> #> [1] a    b[1] b[2] b[4]  # and incomplete terms completed term <- sort(complete_terms(term)) term #> <term[5]> #> [1] a    b[1] b[2] b[3] b[4]"},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/index.html","id":"release","dir":"","previous_headings":"Installation","what":"Release","title":"Create, Manipulate and Query Parameter Terms","text":"install release version CRAN. website release version https://poissonconsulting.github.io/term/.","code":"install.packages(\"term\")"},{"path":"https://poissonconsulting.github.io/term/dev/index.html","id":"development","dir":"","previous_headings":"Installation","what":"Development","title":"Create, Manipulate and Query Parameter Terms","text":"install development version r-universe. GitHub","code":"install.packages(\"term\", repos = c(\"https://poissonconsulting.r-universe.dev\", \"https://cloud.r-project.org\")) # install.packages(\"remotes\") remotes::install_github(\"poissonconsulting/term\")"},{"path":"https://poissonconsulting.github.io/term/dev/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Create, Manipulate and Query Parameter Terms","text":"Please report issues. Pull requests always welcome.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Create, Manipulate and Query Parameter Terms","text":"Please note term project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/NA_term_.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing Term — NA_term_","title":"Missing Term — NA_term_","text":"missing term element.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/NA_term_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing Term — NA_term_","text":"","code":"NA_term_"},{"path":"https://poissonconsulting.github.io/term/dev/reference/NA_term_.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Missing Term — NA_term_","text":"object class term (inherits vctrs_vctr) length 1.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/NA_term_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing Term — NA_term_","text":"","code":"is_term(NA_term_) #> [1] TRUE is.na(NA_term_) #> [1] TRUE"},{"path":"https://poissonconsulting.github.io/term/dev/reference/NA_term_rcrd_.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing Term — NA_term_rcrd_","title":"Missing Term — NA_term_rcrd_","text":"missing term element term_rcrd type.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/NA_term_rcrd_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing Term — NA_term_rcrd_","text":"","code":"NA_term_rcrd_"},{"path":"https://poissonconsulting.github.io/term/dev/reference/NA_term_rcrd_.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Missing Term — NA_term_rcrd_","text":"object class term_rcrd (inherits vctrs_rcrd, vctrs_vctr) length 1.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/NA_term_rcrd_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing Term — NA_term_rcrd_","text":"","code":"is_term_rcrd(NA_term_) #> [1] FALSE is.na(NA_term_) #> [1] TRUE"},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a Term Vector — as_term","title":"Coerce to a Term Vector — as_term","text":"Coerces R object term-vector().","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a Term Vector — as_term","text":"","code":"as_term(x, ...)  as.term(x, ...)  # S3 method for class 'character' as_term(x, repair = FALSE, normalize = repair, ...)  # S3 method for class 'numeric' as_term(x, name = \"par\", ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a Term Vector — as_term","text":"x object. ... dots future extensions must empty. repair flag specifying whether repair terms. normalize flag specifying whether normalize terms. name string specifying name parameter.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce to a Term Vector — as_term","text":".term  as_term.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Coerce to a Term Vector — as_term","text":"as_term(character): Coerce character vector term vector as_term(numeric): Coerce numeric object term vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to a Term Vector — as_term","text":"","code":"as_term(matrix(1:4, 2)) #> <term[4]> #> [1] par[1,1] par[2,1] par[1,2] par[2,2] as_term(c(\"parm3[10]\", \"parm3[2]\", \"parm[2,2]\", \"parm[1,1]\")) #> <term[4]> #> [1] parm3[10] parm3[2]  parm[2,2] parm[1,1]"},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term_rcrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a Term Record — as_term_rcrd","title":"Coerce to a Term Record — as_term_rcrd","text":"Coerces R object term_rcrd.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term_rcrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a Term Record — as_term_rcrd","text":"","code":"as_term_rcrd(x, ...)  # S3 method for class 'character' as_term_rcrd(x, repair = FALSE, ...)  # S3 method for class 'numeric' as_term_rcrd(x, name = \"par\", ...)  # S3 method for class 'term' as_term_rcrd(x, repair = FALSE, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term_rcrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a Term Record — as_term_rcrd","text":"x object. ... dots future extensions must empty. repair flag specifying whether repair terms. name string specifying name parameter.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term_rcrd.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Coerce to a Term Record — as_term_rcrd","text":"as_term_rcrd(character): Coerce character vector term_rcrd as_term_rcrd(numeric): Coerce numeric vector term_rcrd as_term_rcrd(term): Coerce term vector term_rcrd","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/as_term_rcrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to a Term Record — as_term_rcrd","text":"","code":"as_term(matrix(1:4, 2)) #> <term[4]> #> [1] par[1,1] par[2,1] par[1,2] par[2,2] as_term(c(\"parm3[10]\", \"parm3[2]\", \"parm[2,2]\", \"parm[1,1]\")) #> <term[4]> #> [1] parm3[10] parm3[2]  parm[2,2] parm[1,1]"},{"path":"https://poissonconsulting.github.io/term/dev/reference/chk_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Term or Term Record — chk_term","title":"Check Term or Term Record — chk_term","text":"Checks term using vld_term() vld_term_rcrd().","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/chk_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Term or Term Record — chk_term","text":"","code":"chk_term(x, validate = \"complete\", x_name = NULL)  chk_term_rcrd(x, validate = \"complete\", x_name = NULL)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/chk_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Term or Term Record — chk_term","text":"x object. validate string specifying level validation. possible values order increasing strictness 'class', 'valid', 'consistent' 'complete'. x_name string name object x NULL.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/chk_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Term or Term Record — chk_term","text":"NULL, invisibly. Called side effect throwing error condition met.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/chk_term.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Check Term or Term Record — chk_term","text":"chk_term_rcrd(): Check Term Record","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/chk_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Term or Term Record — chk_term","text":"","code":"# chk_term x <- term(\"x[2]\", \"x[1]\") chk_term(x) x <- c(\"x[2]\", \"x[1]\") try(chk_term(x, validate = \"sorted\")) #> Error in vld_term(x, validate = validate) :  #>   `validate` must match 'class', 'complete', 'consistent' or 'valid', not 'sorted'.  # chk_term_rcrd x <- term_rcrd(\"x[2]\", \"x[1]\") chk_term_rcrd(x) x <- c(\"x[2]\", \"x[1]\") try(chk_term_rcrd(x, validate = \"sorted\")) #> Error in vld_term_rcrd(x, validate = validate) :  #>   `validate` must match 'complete', 'consistent' or 'valid', not 'sorted'."},{"path":"https://poissonconsulting.github.io/term/dev/reference/complete_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete Terms — complete_terms","title":"Complete Terms — complete_terms","text":"Completes object's terms.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/complete_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete Terms — complete_terms","text":"","code":"complete_terms(x, ...)  # S3 method for class 'term' complete_terms(x, ...)  # S3 method for class 'term_rcrd' complete_terms(x, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/complete_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete Terms — complete_terms","text":"x object. ... dots future extensions must empty.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/complete_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complete Terms — complete_terms","text":"must invalid missing (NA) values.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/complete_terms.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Complete Terms — complete_terms","text":"complete_terms(term): Complete Terms term Vector complete_terms(term_rcrd): Complete Terms term_rcrd vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/complete_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete Terms — complete_terms","text":"","code":"complete_terms(term(\"b[3]\", \"b[1]\", \"b[2]\")) #> <term[3]> #> [1] b[3] b[1] b[2] complete_terms(term(\"z[2,2]\", \"z[1,1]\")) #> <term[4]> #> [1] z[2,2] z[1,1] z[2,1] z[1,2] if (FALSE) { # \\dontrun{ complete_terms(term_rcrd(\"b[3]\", \"b[1]\", \"b[2]\")) complete_terms(term_rcrd(\"z[2,2]\", \"z[1,1]\")) } # }"},{"path":"https://poissonconsulting.github.io/term/dev/reference/consistent_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Consistent Terms — consistent_term","title":"Consistent Terms — consistent_term","text":"Test whether number dimensions terms parameter consistent.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/consistent_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consistent Terms — consistent_term","text":"","code":"consistent_term(x)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/consistent_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consistent Terms — consistent_term","text":"x object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/consistent_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consistent Terms — consistent_term","text":"logical vector indicating whether number dimensions consistent.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/consistent_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Consistent Terms — consistent_term","text":"","code":"consistent_term(term(\"alpha[1]\", \"alpha[3]\", \"beta[1,1]\", \"beta[2,1]\")) #> [1] TRUE TRUE TRUE TRUE consistent_term(term(\"alpha[1]\", NA_term_, \"beta[1,1]\", \"beta[2]\")) #> [1]  TRUE    NA FALSE FALSE"},{"path":"https://poissonconsulting.github.io/term/dev/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated Functions — deprecated","title":"Deprecated Functions — deprecated","text":"Deprecated Functions","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated Functions — deprecated","text":"","code":"is.term(x)  is.incomplete_terms(x)  is.inconsistent_terms(x)  parameters(x, ...)  parameters(x) <- value  set_parameters(x, pars)  tdims(x)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated Functions — deprecated","text":"... dots future extensions must empty. x object. value character vector new parameter names. pars character vector parameter names.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/deprecated.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Deprecated Functions — deprecated","text":".term(): Term  Replace is_term() .incomplete_terms(): Incomplete Terms  Replace is_incomplete_terms() .inconsistent_terms(): Inconsistent Terms  Replace is_inconsistent_terms() parameters(): Get Parameters  Replace pars() parameters(x) <- value: Setting Parameters  Replace pars<- set_parameters(): Set Parameters  Replace set_pars() tdims(): Term Index  Replace tindex()","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions — dims.term","title":"Dimensions — dims.term","text":"Gets dimensions object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions — dims.term","text":"","code":"# S3 method for class 'term' dims(x, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions — dims.term","text":"x object. ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions — dims.term","text":"integer vector dimensions.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dimensions — dims.term","text":"Unlike base::dim(), dims returns length atomic vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions — dims.term","text":"","code":"dims(term(\"beta[1,1]\")) #> [1] 1 dims(term(\"beta[1,1]\", \"beta[1,2]\")) #> [1] 2"},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term_rcrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions — dims.term_rcrd","title":"Dimensions — dims.term_rcrd","text":"Gets dimensions object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term_rcrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions — dims.term_rcrd","text":"","code":"# S3 method for class 'term_rcrd' dims(x, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term_rcrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions — dims.term_rcrd","text":"x object. ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term_rcrd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions — dims.term_rcrd","text":"integer vector dimensions.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term_rcrd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dimensions — dims.term_rcrd","text":"Unlike base::dim(), dims returns length atomic vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/dims.term_rcrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions — dims.term_rcrd","text":"","code":"dims(term_rcrd(\"beta[1,1]\")) #> [1] 1 dims(term_rcrd(\"beta[1,1]\", \"beta[1,2]\")) #> [1] 2"},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_incomplete_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Incomplete Terms — is_incomplete_terms","title":"Is Incomplete Terms — is_incomplete_terms","text":"Tests whether term vector absent elements. vector require repairing.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_incomplete_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Incomplete Terms — is_incomplete_terms","text":"","code":"is_incomplete_terms(x, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_incomplete_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Incomplete Terms — is_incomplete_terms","text":"x object. ... dots future extensions must empty.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_incomplete_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Incomplete Terms — is_incomplete_terms","text":"logical scalar indicating whether object's terms incomplete.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_incomplete_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is Incomplete Terms — is_incomplete_terms","text":"","code":"is_incomplete_terms(term(\"b[2]\")) #> [1] TRUE is_incomplete_terms(term(\"b[2]\", \"b[1]\")) #> [1] FALSE is_incomplete_terms(term(\"b[2]\", \"b[1]\", \"b[1]\")) #> [1] FALSE"},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_inconsistent_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Inconsistent Terms — is_inconsistent_terms","title":"Is Inconsistent Terms — is_inconsistent_terms","text":"Tests whether term vector inconsistent elements. Returns TRUE includes missing invalid terms.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_inconsistent_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Inconsistent Terms — is_inconsistent_terms","text":"","code":"is_inconsistent_terms(x, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_inconsistent_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Inconsistent Terms — is_inconsistent_terms","text":"x object. ... dots future extensions must empty.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_inconsistent_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Inconsistent Terms — is_inconsistent_terms","text":"logical scalar indicating whether object's terms inconsistent.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_inconsistent_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is Inconsistent Terms — is_inconsistent_terms","text":"","code":"is_inconsistent_terms(term(\"b[2]\")) #> [1] FALSE is_inconsistent_terms(term(\"b[2]\", \"b[1]\")) #> [1] FALSE is_inconsistent_terms(term(\"b[2]\", \"b[1,1]\")) #> [1] TRUE"},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Term — is_term","title":"Is Term — is_term","text":"Tests whether R object inherits S3 class term.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Term — is_term","text":"","code":"is_term(x)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Term — is_term","text":"x object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Term — is_term","text":"flag indicating whether test positive.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is Term — is_term","text":"test validity consistency term elements.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is Term — is_term","text":"","code":"is_term(c(\"parameter[2]\", \"parameter[10]\")) #> [1] FALSE is_term(term(\"parameter[2]\", \"parameter[10]\")) #> [1] TRUE"},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term_rcrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Term Record — is_term_rcrd","title":"Is Term Record — is_term_rcrd","text":"Tests whether R object inherits S3 class term_rcrd.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term_rcrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Term Record — is_term_rcrd","text":"","code":"is_term_rcrd(x)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term_rcrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Term Record — is_term_rcrd","text":"x object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term_rcrd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Term Record — is_term_rcrd","text":"flag indicating whether test positive.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term_rcrd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is Term Record — is_term_rcrd","text":"test validity consistency term elements.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/is_term_rcrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is Term Record — is_term_rcrd","text":"","code":"is_term_rcrd(new_term_rcrd()) #> [1] TRUE"},{"path":"https://poissonconsulting.github.io/term/dev/reference/new_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a New Term Object — new_term","title":"Construct a New Term Object — new_term","text":"Use function quickly construct term object character vector, without checking input. Use term() repair input.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/new_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a New Term Object — new_term","text":"","code":"new_term(x = character())"},{"path":"https://poissonconsulting.github.io/term/dev/reference/new_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a New Term Object — new_term","text":"x character vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/new_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a New Term Object — new_term","text":"","code":"new_term() #> <term[0]> new_term(c(\"a\", \"b[1]\", \"b[2]\")) #> <term[3]> #> [1] a    b[1] b[2]  # Terms are not checked for validity: new_term(\"r[\") #> <term[1]> #> [1] r[ repair_terms(new_term(\"r[\")) #> <term[1]> #> [1] <NA>"},{"path":"https://poissonconsulting.github.io/term/dev/reference/new_term_rcrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a New Term Record Object — new_term_rcrd","title":"Construct a New Term Record Object — new_term_rcrd","text":"Use function quickly construct term_rcrd object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/new_term_rcrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a New Term Record Object — new_term_rcrd","text":"","code":"new_term_rcrd(   x = data.frame(par = character(), dim = I(list()), stringsAsFactors = FALSE) )"},{"path":"https://poissonconsulting.github.io/term/dev/reference/new_term_rcrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a New Term Record Object — new_term_rcrd","text":"x data frame columns par dim.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/new_term_rcrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a New Term Record Object — new_term_rcrd","text":"","code":"new_term_rcrd() #> <term_rcrd[0]> if (FALSE) { # \\dontrun{ new_term_rcrd(data.frame(   par = c(\"x\", \"x\", \"y\"), dim = I(list(1, 2, c(2, 2))),   stringsAsFactors = FALSE )) } # }"},{"path":"https://poissonconsulting.github.io/term/dev/reference/normalize_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Terms — normalize_terms","title":"Normalize Terms — normalize_terms","text":"Normalizes term vector.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/normalize_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Terms — normalize_terms","text":"","code":"normalize_terms(x)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/normalize_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Terms — normalize_terms","text":"x object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/normalize_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Terms — normalize_terms","text":"normalized term vector.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/normalize_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize Terms — normalize_terms","text":"parameter b scalar b[1] replaced b higher indices included b[2] b replaced b[1].","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/normalize_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Terms — normalize_terms","text":"","code":"normalize_terms(new_term(c(\"b\", \"b[3]\"))) #> <term[2]> #> [1] b[1] b[3] normalize_terms(new_term(c(\"b[1]\", \"a[3]\"))) #> <term[2]> #> [1] b    a[3]"},{"path":"https://poissonconsulting.github.io/term/dev/reference/npars.term.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Parameters — npars.term","title":"Number of Parameters — npars.term","text":"Gets number parameters object. default methods returns length pars() none NA, otherwise returns NA.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/npars.term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Parameters — npars.term","text":"","code":"# S3 method for class 'term' npars(x, scalar = NULL, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/npars.term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Parameters — npars.term","text":"x object. scalar flag specifying whether default return parameters (NULL), scalar parameters (TRUE) non-scalar parameters (FALSE). ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/npars.term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Parameters — npars.term","text":"integer scalar number parameters.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/npars.term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Parameters — npars.term","text":"","code":"npars(term(\"sigma\", \"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\")) #> [1] 3"},{"path":"https://poissonconsulting.github.io/term/dev/reference/npdims.term.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Dimensions of Each Parameter — npdims.term","title":"Number of Dimensions of Each Parameter — npdims.term","text":"terms argument  .","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/npdims.term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Dimensions of Each Parameter — npdims.term","text":"","code":"# S3 method for class 'term' npdims(x, terms = FALSE, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/npdims.term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Dimensions of Each Parameter — npdims.term","text":"x object. terms flag specifying whether get number dimensions term element. ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/npdims.term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Dimensions of Each Parameter — npdims.term","text":"named integer vector number dimensions parameter.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/npdims.term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Dimensions of Each Parameter — npdims.term","text":"","code":"npdims(term(\"alpha[1]\", \"alpha[3]\", \"beta[1,1]\", \"beta[2,1]\")) #> alpha  beta  #>     1     2"},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Terms — nterms.default","title":"Number of Terms — nterms.default","text":"Gets number terms object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Terms — nterms.default","text":"","code":"# Default S3 method nterms(x, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Terms — nterms.default","text":"x object. ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Terms — nterms.default","text":"integer scalar number terms.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Terms — nterms.default","text":"","code":"nterms(term(\"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\")) #> [1] 4 nterms(term(\"alpha[1]\", \"alpha[1]\", \"beta[1,1]\", \"beta[1,1]\")) #> [1] 4"},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.term.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Terms of a Term — nterms.term","title":"Number of Terms of a Term — nterms.term","text":"Gets number terms MCMC object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Terms of a Term — nterms.term","text":"","code":"# S3 method for class 'term' nterms(x, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Terms of a Term — nterms.term","text":"x object. ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Terms of a Term — nterms.term","text":"integer scalar number terms.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Terms of a Term — nterms.term","text":"","code":"nterms(term(\"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\")) #> [1] 4 nterms(term(\"alpha[1]\", \"alpha[1]\", \"beta[1,1]\", \"beta[1,1]\")) #> [1] 4"},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.term_rcrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Terms of a Term Record — nterms.term_rcrd","title":"Number of Terms of a Term Record — nterms.term_rcrd","text":"Gets number terms MCMC object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.term_rcrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Terms of a Term Record — nterms.term_rcrd","text":"","code":"# S3 method for class 'term_rcrd' nterms(x, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.term_rcrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Terms of a Term Record — nterms.term_rcrd","text":"x object. ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.term_rcrd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Terms of a Term Record — nterms.term_rcrd","text":"integer scalar number terms.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/nterms.term_rcrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Terms of a Term Record — nterms.term_rcrd","text":"","code":"nterms(as_term_rcrd(term(\"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\"))) #> [1] 4 nterms(as_term_rcrd(term(\"alpha[1]\", \"alpha[1]\", \"beta[1,1]\", \"beta[1,1]\"))) #> [1] 4"},{"path":"https://poissonconsulting.github.io/term/dev/reference/params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Descriptions for term Package — params","title":"Parameter Descriptions for term Package — params","text":"Default parameter descriptions may overridden individual functions.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Descriptions for term Package — params","text":"... dots future extensions must empty. x object. name string specifying name parameter. validate string specifying level validation. possible values order increasing strictness 'class', 'valid', 'consistent' 'complete'. repair flag specifying whether repair terms. normalize flag specifying whether normalize terms. select character vector names parameters include subsetted object. value character vector new parameter names. pars character vector parameter names. scalar flag specifying whether default return parameters (NULL), scalar parameters (TRUE) non-scalar parameters (FALSE). terms flag specifying whether return parameter name term element. incomparables Ignored.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter Descriptions for term Package — params","text":"flag non-missing logical scalar. string non-missing character scalar.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.character.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Names — pars.character","title":"Parameter Names — pars.character","text":"Gets parameter names.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Names — pars.character","text":"","code":"# S3 method for class 'character' pars(x, scalar = NULL, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Names — pars.character","text":"x object. scalar flag specifying whether default return parameters (NULL), scalar parameters (TRUE) non-scalar parameters (FALSE). ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.character.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Names — pars.character","text":"character vector names parameters.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.character.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Names — pars.character","text":"","code":"pars(c(\"a\", \"b[1]\", \"a[3]\")) #> [1] \"a\" \"b\""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Names — pars.default","title":"Parameter Names — pars.default","text":"Gets parameter names.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Names — pars.default","text":"","code":"# Default S3 method pars(x, scalar = NULL, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Names — pars.default","text":"x object. scalar flag specifying whether default return parameters (NULL), scalar parameters (TRUE) non-scalar parameters (FALSE). ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Names — pars.default","text":"character vector names parameters.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Names — pars.default","text":"","code":"pars(matrix(1:4, nrow = 2)) #> [1] \"par\""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.term.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Names — pars.term","title":"Parameter Names — pars.term","text":"Gets parameter names.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Names — pars.term","text":"","code":"# S3 method for class 'term' pars(x, scalar = NULL, terms = FALSE, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Names — pars.term","text":"x object. scalar flag specifying whether default return parameters (NULL), scalar parameters (TRUE) non-scalar parameters (FALSE). terms flag specifying whether return parameter name term element. ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Names — pars.term","text":"character vector names parameters.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Names — pars.term","text":"","code":"term <- term(   \"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\",   \"beta[1,2]\", \"beta[2,2]\", \"sigma\", NA ) pars(term) #> [1] \"alpha\" \"beta\"  \"sigma\" NA      pars(term, scalar = TRUE) #> [1] \"sigma\" NA      pars(term, scalar = FALSE) #> [1] \"alpha\" \"beta\"  NA"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.term_rcrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Names — pars.term_rcrd","title":"Parameter Names — pars.term_rcrd","text":"Gets parameter names.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.term_rcrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Names — pars.term_rcrd","text":"","code":"# S3 method for class 'term_rcrd' pars(x, scalar = NULL, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.term_rcrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Names — pars.term_rcrd","text":"x object. scalar flag specifying whether default return parameters (NULL), scalar parameters (TRUE) non-scalar parameters (FALSE). ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.term_rcrd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Names — pars.term_rcrd","text":"character vector names parameters.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars.term_rcrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Names — pars.term_rcrd","text":"","code":"term <- term(   \"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\",   \"beta[1,2]\", \"beta[2,2]\", \"sigma\", NA ) pars(term) #> [1] \"alpha\" \"beta\"  \"sigma\" NA      pars(term, scalar = TRUE) #> [1] \"sigma\" NA      pars(term, scalar = FALSE) #> [1] \"alpha\" \"beta\"  NA"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Term Parameters — pars_terms","title":"Term Parameters — pars_terms","text":"Gets name parameter term.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Term Parameters — pars_terms","text":"","code":"pars_terms(x, scalar = NULL, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Term Parameters — pars_terms","text":"x term vector. scalar flag specifying whether default return parameters (NULL), scalar parameters (TRUE) non-scalar parameters (FALSE). ... dots future extensions must empty.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Term Parameters — pars_terms","text":"character vector term parameter names.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Term Parameters — pars_terms","text":"scalar argument .","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/pars_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Term Parameters — pars_terms","text":"","code":"term <- term(   \"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\",   \"beta[1,2]\", \"beta[2,2]\", \"sigma\", NA ) pars_terms(term) #> [1] \"alpha\" \"alpha\" \"beta\"  \"beta\"  \"beta\"  \"beta\"  \"sigma\" NA"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Dimensions — pdims.term","title":"Parameter Dimensions — pdims.term","text":"Gets dimensions parameter object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Dimensions — pdims.term","text":"","code":"# S3 method for class 'term' pdims(x, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Dimensions — pdims.term","text":"x object. ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Dimensions — pdims.term","text":"named list integer vectors dimensions parameter.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter Dimensions — pdims.term","text":"Errors parameter dimensions invalid inconsistent. named list dimensions parameter can converted equivalent term-vector() using term().","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Dimensions — pdims.term","text":"","code":"pdims(term(\"alpha[1]\", \"alpha[3]\", \"beta[1,1]\", \"beta[2,1]\")) #> $alpha #> [1] 3 #>  #> $beta #> [1] 2 1 #>"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term_rcrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Dimensions — pdims.term_rcrd","title":"Parameter Dimensions — pdims.term_rcrd","text":"Gets dimensions parameter object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term_rcrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Dimensions — pdims.term_rcrd","text":"","code":"# S3 method for class 'term_rcrd' pdims(x, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term_rcrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Dimensions — pdims.term_rcrd","text":"x object. ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term_rcrd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Dimensions — pdims.term_rcrd","text":"named list integer vectors dimensions parameter.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term_rcrd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter Dimensions — pdims.term_rcrd","text":"Errors parameter dimensions inconsistent.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/pdims.term_rcrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Dimensions — pdims.term_rcrd","text":"","code":"pdims(as_term_rcrd(term(\"alpha[1]\", \"alpha[3]\", \"beta[1,1]\", \"beta[2,1]\"))) #> $alpha #> [1] 3 #>  #> $beta #> [1] 2 1 #>"},{"path":"https://poissonconsulting.github.io/term/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. universals dims, ndims, npars, npdims, nterms, pars, pdims, set_pars vctrs vec_cast","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/repair_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Repair Terms — repair_terms","title":"Repair Terms — repair_terms","text":"Repairs terms vector.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/repair_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repair Terms — repair_terms","text":"","code":"repair_terms(x, normalize = TRUE)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/repair_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repair Terms — repair_terms","text":"x object. normalize flag specifying whether normalize terms.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/repair_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repair Terms — repair_terms","text":"repaired term vector.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/repair_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Repair Terms — repair_terms","text":"Invalid elements replaced missing values spaces removed.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/repair_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repair Terms — repair_terms","text":"","code":"repair_terms(new_term(c(\"b[3]\", \"b\"))) #> <term[2]> #> [1] b[3] b[1] repair_terms(new_term(c(\"a[3]\", \"b[1]\"))) #> <term[2]> #> [1] a[3] b    repair_terms(new_term(c(\"a [3]\", \" b [ 1  ] \"))) #> <term[2]> #> [1] a[3] b    repair_terms(new_term(c(\"a\", NA))) #> <term[2]> #> [1] a    <NA>"},{"path":"https://poissonconsulting.github.io/term/dev/reference/scalar_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Scalar Term — scalar_term","title":"Scalar Term — scalar_term","text":"Test whether term scalar.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/scalar_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scalar Term — scalar_term","text":"","code":"scalar_term(x)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/scalar_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scalar Term — scalar_term","text":"x object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/scalar_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scalar Term — scalar_term","text":"logical vector indicating whether term scalar.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/scalar_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scalar Term — scalar_term","text":"","code":"scalar_term(term(\"alpha[1]\", \"alpha[3]\", \"beta[1]\", \"sigma[3]\")) #> [1] FALSE FALSE  TRUE FALSE scalar_term(term(\"alpha[1]\", NA_term_, \"beta[1]\", \"beta[3]\")) #> [1]  TRUE    NA FALSE FALSE"},{"path":"https://poissonconsulting.github.io/term/dev/reference/set_pars.term.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Parameter Names — set_pars.term","title":"Set Parameter Names — set_pars.term","text":"Sets object's parameter names. assignment version pars<-() forwards set_pars().","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/set_pars.term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Parameter Names — set_pars.term","text":"","code":"# S3 method for class 'term' set_pars(x, value, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/set_pars.term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Parameter Names — set_pars.term","text":"x object. value character vector new parameter names. ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/set_pars.term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Parameter Names — set_pars.term","text":"modified object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/set_pars.term.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Parameter Names — set_pars.term","text":"value must unique character vector length object's parameters.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/set_pars.term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Parameter Names — set_pars.term","text":"","code":"term <- as_term(c(\"b[2]\", \"a[1]\", \"b[3,3]\")) set_pars(term, c(\"x\", \"y\")) #> <term[3]> #> [1] x[2]   y[1]   x[3,3]"},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Term Vector — subset.term","title":"Subset Term Vector — subset.term","text":"Subsets term vector.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Term Vector — subset.term","text":"","code":"# S3 method for class 'term' subset(x, pars = NULL, select = NULL, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Term Vector — subset.term","text":"x object. pars character vector parameter names. select character vector names parameters include subsetted object. ... dots future extensions must empty.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Term Vector — subset.term","text":"modified term vector.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset Term Vector — subset.term","text":"select argument  .","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Term Vector — subset.term","text":"","code":"term <- term(   \"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\",   \"beta[1,2]\", \"beta[2,2]\", \"sigma\" ) subset(term, \"beta\") #> <term[4]> #> [1] beta[1,1] beta[2,1] beta[1,2] beta[2,2] subset(term, c(\"alpha\", \"sigma\")) #> <term[3]> #> [1] alpha[1] alpha[2] sigma"},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term_rcrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Term Record — subset.term_rcrd","title":"Subset Term Record — subset.term_rcrd","text":"Subsets term_rcrd.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term_rcrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Term Record — subset.term_rcrd","text":"","code":"# S3 method for class 'term_rcrd' subset(x, pars = NULL, ...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term_rcrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Term Record — subset.term_rcrd","text":"x object. pars character vector parameter names. ... dots future extensions must empty.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term_rcrd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Term Record — subset.term_rcrd","text":"modified term vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/subset.term_rcrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Term Record — subset.term_rcrd","text":"","code":"term_rcrd <- term_rcrd(   \"alpha[1]\", \"alpha[2]\", \"beta[1,1]\", \"beta[2,1]\",   \"beta[1,2]\", \"beta[2,2]\", \"sigma\" ) if (FALSE) { # \\dontrun{ subset(term_rcrd, \"beta\") subset(term_rcrd, c(\"alpha\", \"sigma\")) } # }"},{"path":"https://poissonconsulting.github.io/term/dev/reference/term.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Term Vector — term","title":"Create Term Vector — term","text":"Creates term vector values. term vector S3 vector parameter terms form p, q[#] r[#,#] # positive integers. function checks terms valid require stronger levels consistency, see chk_valid() details.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Term Vector — term","text":"","code":"term(...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Term Vector — term","text":"... Unnamed values term values, named values describe parameter name dimensionality value.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Term Vector — term","text":"term vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Term Vector — term","text":"","code":"term() #> <term[0]> term(\"p\", \"q[1]\", \"q[2]\", \"q[3]\") #> <term[4]> #> [1] p    q[1] q[2] q[3] term(\"q[1]\", \"q[2]\", \"q[3]\") #> <term[3]> #> [1] q[1] q[2] q[3] combined <- term(par = 2:4, \"alpha\") pdims(combined) #> $alpha #> [1] 1 #>  #> $par #> [1] 2 3 4 #>  term(!!!pdims(combined)) #> <term[25]> #>  [1] alpha      par[1,1,1] par[2,1,1] par[1,2,1] par[2,2,1] par[1,3,1] #>  [7] par[2,3,1] par[1,1,2] par[2,1,2] par[1,2,2] par[2,2,2] par[1,3,2] #> [13] par[2,3,2] par[1,1,3] par[2,1,3] par[1,2,3] par[2,2,3] par[1,3,3] #> [19] par[2,3,3] par[1,1,4] par[2,1,4] par[1,2,4] par[2,2,4] par[1,3,4] #> [25] par[2,3,4]  # Invalid terms are rejected: try(term(\"r[\")) #> Error in term_impl(args) :  #>   All elements of term vector `string_args_term` must be valid.  # Valid terms are repaired term(\"r  [ 1  ,2  ]\") #> <term[1]> #> [1] r[1,2]"},{"path":"https://poissonconsulting.github.io/term/dev/reference/term_rcrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Term Record — term_rcrd","title":"Create Term Record — term_rcrd","text":"Creates term_rcrd values. function checks terms valid require stronger levels consistency, see chk_valid() details.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/term_rcrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Term Record — term_rcrd","text":"","code":"term_rcrd(...)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/term_rcrd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Term Record — term_rcrd","text":"... Unnamed values term values, named values describe parameter name dimensionality value.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/term_rcrd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Term Record — term_rcrd","text":"term_rcrd vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/term_rcrd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Term Record — term_rcrd","text":"","code":"term_rcrd() #> <term_rcrd[0]> if (FALSE) { # \\dontrun{ term_rcrd(\"p\", \"q[1]\", \"q[2]\", \"q[3]\") term_rcrd(\"q[1]\", \"q[2]\", \"q[3]\") } # }"},{"path":"https://poissonconsulting.github.io/term/dev/reference/tindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Term Index — tindex","title":"Term Index — tindex","text":"Gets index term term term_rcrd object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/tindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Term Index — tindex","text":"","code":"tindex(x)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/tindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Term Index — tindex","text":"x object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/tindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Term Index — tindex","text":"named list integer vectors index term.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/tindex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Term Index — tindex","text":"example index beta[2,1] c(2L, 1L) index sigma 1L. useful extracting values individual terms.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/tindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Term Index — tindex","text":"","code":"tindex(term(\"alpha\", \"alpha[2]\", \"beta[1,1]\", \"beta[2 ,1  ]\")) #> $`alpha[1]` #> [1] 1 #>  #> $`alpha[2]` #> [1] 2 #>  #> $`beta[1,1]` #> [1] 1 1 #>  #> $`beta[2,1]` #> [1] 2 1 #>"},{"path":"https://poissonconsulting.github.io/term/dev/reference/valid_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Valid Terms — valid_term","title":"Test Valid Terms — valid_term","text":"Test whether element term term_rcrd object valid.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/valid_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Valid Terms — valid_term","text":"","code":"valid_term(x)"},{"path":"https://poissonconsulting.github.io/term/dev/reference/valid_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Valid Terms — valid_term","text":"x object.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/valid_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Valid Terms — valid_term","text":"logical vector indicating whether term valid.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/valid_term.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test Valid Terms — valid_term","text":"Repairing term vector replaces invalid terms missing values.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/valid_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Valid Terms — valid_term","text":"","code":"# valid term elements valid_term(term(\"a\", \"a [3]\", \" b [ 1  ] \", \"c[1,300,10]\")) #> [1] TRUE TRUE TRUE TRUE # invalid term elements valid_term(new_term(c(\"a b\", \"a[1]b\", \"a[0]\", \"b[1,]\", \"c[]\", \"d[1][2]\"))) #> [1] FALSE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://poissonconsulting.github.io/term/dev/reference/vld_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Term or Term Record — vld_term","title":"Validate Term or Term Record — vld_term","text":"Validates elements term term_rcrd vector.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/vld_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Term or Term Record — vld_term","text":"","code":"vld_term(x, validate = \"complete\")  vld_term_rcrd(x, validate = \"complete\")"},{"path":"https://poissonconsulting.github.io/term/dev/reference/vld_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Term or Term Record — vld_term","text":"x object. validate string specifying level validation. possible values order increasing strictness 'class', 'valid', 'consistent' 'complete'.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/vld_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Term or Term Record — vld_term","text":"flag indicating whether condition met.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/vld_term.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Term or Term Record — vld_term","text":"Internal validity term can checked three levels: \"valid\" checks terms form x, x[#], x[#,#] etc. x identifier # positive integers. \"consistent\" checks terms addressed dimensionality; terms x[1] x[2,3] inconsistent. \"complete\" checks values span possible values across dimensions; x[3,4] exist, vector must contain least 11 terms consistent (x[1,1] x[1,4], x[2,1] x[2,4] x[3,1] x[3,3]). Missing values ignored duplicates order.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/reference/vld_term.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Validate Term or Term Record — vld_term","text":"vld_term_rcrd(): Validate Term Record","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/reference/vld_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Term or Term Record — vld_term","text":"","code":"# vld_term vld_term(c(\"x[2]\", \"x[1]\")) #> [1] FALSE vld_term(term(\"x[2]\", \"x[1]\")) #> [1] TRUE  # vld_term_rcrd vld_term_rcrd(c(\"x[2]\", \"x[1]\")) #> [1] FALSE vld_term_rcrd(term_rcrd(\"x[2]\", \"x[1]\")) #> [1] TRUE"},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-0359006","dir":"Changelog","previous_headings":"","what":"term 0.3.5.9006","title":"term 0.3.5.9006","text":"Drop chk_s3_class() documentation.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"continuous-integration-0-3-5-9005","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"term 0.3.5.9005","text":"Avoid failure fledge workflow changes (#63).","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"continuous-integration-0-3-5-9004","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"term 0.3.5.9004","text":"Fetch tags fledge workflow avoid unnecessary NEWS entries (#62).","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"continuous-integration-0-3-5-9003","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"term 0.3.5.9003","text":"Use larger retry count lock-threads workflow (#61).","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"continuous-integration-0-3-5-9002","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"term 0.3.5.9002","text":"Ignore errors removing pkg-config macOS (#60).","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"continuous-integration-0-3-5-9001","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"term 0.3.5.9001","text":"Overwrite actions-sync (#59).","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"uncategorized-0-3-5-9001","dir":"Changelog","previous_headings":"","what":"Uncategorized","title":"term 0.3.5.9001","text":"Merge pull request #58 poissonconsulting/upkeep. Upkeep","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-0359000","dir":"Changelog","previous_headings":"","what":"term 0.3.5.9000","title":"term 0.3.5.9000","text":"previous version.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-035","dir":"Changelog","previous_headings":"","what":"term 0.3.5","title":"term 0.3.5","text":"CRAN release: 2022-09-29 Requires R (>= 3.5) Moved following soft warn deprecated .term() .incomplete_terms() .inconsistent_terms() parameters() parameters<-() set_parameters() tdims()","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-034","dir":"Changelog","previous_headings":"","what":"term 0.3.4","title":"term 0.3.4","text":"CRAN release: 2022-03-03 Removed deprecated default.stringsAsFactors() .data.frame.term_rcrd","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-033","dir":"Changelog","previous_headings":"","what":"term 0.3.3","title":"term 0.3.3","text":"CRAN release: 2021-09-28 Switched order equality condition expectations internal tests.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-032","dir":"Changelog","previous_headings":"","what":"term 0.3.2","title":"term 0.3.2","text":"CRAN release: 2021-09-06 Internally replaced chk::chkor() chk::chkor_vld().","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-031","dir":"Changelog","previous_headings":"","what":"term 0.3.1","title":"term 0.3.1","text":"CRAN release: 2021-02-06 Updated internals lifecycle 1.0.0.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-030","dir":"Changelog","previous_headings":"","what":"term 0.3.0","title":"term 0.3.0","text":"CRAN release: 2020-09-25","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"term 0.3.0","text":"Stop deprecated terms argument npdims.term(). Warn deprecated terms argument pars.terms(). nterms() now returns total number terms just number unique non-missing terms. is_inconsistent_term() now returns TRUE includes missing invalid terms.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"major-0-3-0","dir":"Changelog","previous_headings":"Features","what":"Major","title":"term 0.3.0","text":"Added term_rcrd class store vector underlying data frame implemented functions.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"minor-0-3-0","dir":"Changelog","previous_headings":"Features","what":"Minor","title":"term 0.3.0","text":"unique(). summary(). anyDuplicated(). scalar_term() test whether element term vector scalar. normalize_terms(). normalize argument as_term.character().","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"term 0.3.0","text":"Fix .term() issues deprecation warning.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-020","dir":"Changelog","previous_headings":"","what":"term 0.2.0","title":"term 0.2.0","text":"CRAN release: 2020-06-20","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"term 0.2.0","text":"is_complete_terms() now requires number duplicate copies. chk_term() vld_term() argument validate now defaults \"complete\" class value soft-deprecated. .term() as_term(). .term() is_term(). .incomplete_terms() is_incomplete_terms(). .inconsistent_terms() is_inconsistent_terms(). pars(x, terms = TRUE) pars_terms(x). subset(select = ) subset(pars = ). terms argument npdims().","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"features-0-2-0","dir":"Changelog","previous_headings":"","what":"Features","title":"term 0.2.0","text":"term() constructor treats unnamed arguments term values named values parameters associated dimensions. new_term() create term vector character vector without check. vec_cast() safely cast character. Added pars(scalar = TRUE) npars(scalar = TRUE). Added pars_terms(). Added scalar_term() test term element scalar.","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"internal-0-2-0","dir":"Changelog","previous_headings":"","what":"Internal","title":"term 0.2.0","text":"Use extras CRAN. ndims() dims() imported universals reexported. New implementation repair_terms().","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-010","dir":"Changelog","previous_headings":"","what":"term 0.1.0","title":"term 0.1.0","text":"CRAN release: 2020-01-15 Added chk_term() vld_term().","code":""},{"path":"https://poissonconsulting.github.io/term/dev/news/index.html","id":"term-001","dir":"Changelog","previous_headings":"","what":"term 0.0.1","title":"term 0.0.1","text":"CRAN release: 2019-12-15 Initial release.","code":""}]
